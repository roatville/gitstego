{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"R:\\\\VIT Research\\\\Research Papers for topics\\\\Stegnography for medical imaging\\\\portalwebsite\\\\gitstego\\\\components\\\\StepsHide.js\";\nimport { useState } from \"react\";\nimport FormFiles from \"./FormFiles\";\nimport FormRange from \"./FormRange\";\nimport FormPassword from \"./FormPassword\";\nimport ProgressButton from \"./ProgressButton\";\nimport HideWorker from \"../workers/Hide.worker\";\n\nconst StepsHide = () => {\n  const {\n    0: image,\n    1: setImage\n  } = useState([]);\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const {\n    0: compression,\n    1: setCompression\n  } = useState(9);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"\");\n  const {\n    0: hiding,\n    1: setHiding\n  } = useState(false);\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    0: result,\n    1: setResult\n  } = useState(null);\n\n  const hideFiles = () => {\n    setHiding(true);\n    const worker = new HideWorker();\n\n    worker.onmessage = ({\n      data: {\n        progress,\n        result\n      }\n    }) => {\n      setProgress(progress);\n      setResult(result);\n    };\n\n    worker.postMessage({\n      image,\n      files,\n      compression,\n      password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"form\",\n    className: \"grid gap-32\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-8\",\n        children: \"Add the image you want to hide the files inside\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormFiles, {\n        type: \"image\",\n        accept: \"image/*\",\n        files: image,\n        setFiles: setImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-8\",\n        children: \"Add the files you would like to hide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormFiles, {\n        multiple: true,\n        files: files,\n        setFiles: setFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-8\",\n        children: \"Choose the compression level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormRange, {\n        min: 0,\n        max: 9,\n        step: 1,\n        value: compression,\n        onChange: setCompression\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-8\",\n        children: [\"Choose and confirm password\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-400\",\n          children: \"(optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormPassword, {\n        value: password,\n        confirm: confirmPassword,\n        onChange: setPassword,\n        onConfirm: setConfirmPassword,\n        valid: password === confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProgressButton, {\n        onClick: hideFiles,\n        progress: progress,\n        download: result && URL.createObjectURL(result),\n        children: result ? \"Download image\" : hiding ? \"Hiding files...\" : \"Hide files inside image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\nexport default StepsHide;","map":{"version":3,"sources":["R:/VIT Research/Research Papers for topics/Stegnography for medical imaging/portalwebsite/gitstego/components/StepsHide.js"],"names":["useState","FormFiles","FormRange","FormPassword","ProgressButton","HideWorker","StepsHide","image","setImage","files","setFiles","compression","setCompression","password","setPassword","confirmPassword","setConfirmPassword","hiding","setHiding","progress","setProgress","result","setResult","hideFiles","worker","onmessage","data","postMessage","URL","createObjectURL"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport FormFiles from \"./FormFiles\";\r\nimport FormRange from \"./FormRange\";\r\nimport FormPassword from \"./FormPassword\";\r\nimport ProgressButton from \"./ProgressButton\";\r\nimport HideWorker from \"../workers/Hide.worker\";\r\n\r\nconst StepsHide = () => {\r\n    const [image, setImage] = useState([]);\r\n    const [files, setFiles] = useState([]);\r\n    const [compression, setCompression] = useState(9);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [hiding, setHiding] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [result, setResult] = useState(null);\r\n\r\n    const hideFiles = () => {\r\n        setHiding(true);\r\n        const worker = new HideWorker();\r\n\r\n        worker.onmessage = ({ data: { progress, result } }) => {\r\n            setProgress(progress);\r\n            setResult(result);\r\n        };\r\n\r\n        worker.postMessage({\r\n            image,\r\n            files,\r\n            compression,\r\n            password,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form id=\"form\" className=\"grid gap-32\">\r\n            <div>\r\n                <p className=\"mb-8\">\r\n                    Add the image you want to hide the files inside\r\n                </p>\r\n                <FormFiles\r\n                    type=\"image\"\r\n                    accept=\"image/*\"\r\n                    files={image}\r\n                    setFiles={setImage}\r\n                />\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <p className=\"mb-8\">Add the files you would like to hide</p>\r\n                <FormFiles multiple files={files} setFiles={setFiles} />\r\n            </div>\r\n            <div>\r\n                <p className=\"mb-8\">Choose the compression level</p>\r\n                <FormRange\r\n                    min={0}\r\n                    max={9}\r\n                    step={1}\r\n                    value={compression}\r\n                    onChange={setCompression}\r\n                />\r\n            </div>\r\n            <div>\r\n                <p className=\"mb-8\">\r\n                    Choose and confirm password{\" \"}\r\n                    <span className=\"text-gray-400\">(optional)</span>\r\n                </p>\r\n                <FormPassword\r\n                    value={password}\r\n                    confirm={confirmPassword}\r\n                    onChange={setPassword}\r\n                    onConfirm={setConfirmPassword}\r\n                    valid={password === confirmPassword}\r\n                />\r\n            </div>\r\n            <div>\r\n                <ProgressButton\r\n                    onClick={hideFiles}\r\n                    progress={progress}\r\n                    download={result && URL.createObjectURL(result)}\r\n                >\r\n                    {result\r\n                        ? \"Download image\"\r\n                        : hiding\r\n                        ? \"Hiding files...\"\r\n                        : \"Hide files inside image\"}\r\n                </ProgressButton>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default StepsHide;\r\n"]},"metadata":{},"sourceType":"module"}