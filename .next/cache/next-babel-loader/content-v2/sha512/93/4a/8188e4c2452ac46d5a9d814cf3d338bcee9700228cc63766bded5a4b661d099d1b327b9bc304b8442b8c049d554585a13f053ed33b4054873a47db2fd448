{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"R:\\\\VIT Research\\\\Research Papers for topics\\\\Stegnography for medical imaging\\\\portalwebsite\\\\gitstego\\\\components\\\\FormFiles.js\";\nimport { useRef, useState } from \"react\";\nimport pretty from \"pretty-bytes\";\n\nconst FormFiles = ({\n  type = \"file\",\n  multiple,\n  accept,\n  files,\n  setFiles\n}) => {\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const fileInput = useRef(null);\n\n  const readFile = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        resolve({\n          contents: reader.result,\n          name: file.name,\n          date: new Date(file.lastModified),\n          size: file.size,\n          type: file.type\n        });\n      };\n\n      reader.onerror = reject;\n      reader.readAsArrayBuffer(file);\n    });\n  };\n\n  const loadFiles = async event => {\n    setLoading(true);\n\n    try {\n      const newFiles = await Promise.all([...event.target.files].map(readFile));\n      setError(false);\n      setFiles([...files, ...newFiles].reduce(uniqueFiles, []));\n    } catch {\n      setError(true);\n    }\n\n    setLoading(false);\n  };\n\n  const uniqueFiles = (uniqueFiles, file) => {\n    const exists = uniqueFiles.find(existing => existing.name === file.name && existing.lastModified === file.lastModified && existing.size === file.size && existing.type === file.type);\n    return exists ? uniqueFiles : [...uniqueFiles, file];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 gap-8 bg-gray-900 bg-opacity-25 shadow-inner p-8 -mx-8 sm:-mx-4 sm:rounded-lg\",\n    children: [files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"relative flex flex-row items-center text-base md:text-lg bg-gray-700 shadow rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex-grow py-2 px-4 truncate\",\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex-shrink whitespace-nowrap py-2 px-4 text-gray-500\",\n        children: pretty(file.size)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"self-stretch px-3 text-3xl bg-gray-800 bg-opacity-25 hover:bg-opacity-50 focus:outline-none focus-visible:ring ring-blue-500 ring-opacity-50 rounded-r\",\n        type: \"button\",\n        onClick: () => setFiles(files.filter((_, i) => i !== index)),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)), (files.length === 0 || multiple) && /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"relative flex flex-row items-center text-base md:text-lg bg-gray-700 shadow rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: accept,\n        onChange: loadFiles,\n        multiple: multiple,\n        hidden: true,\n        ref: fileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex-grow py-2 px-4 truncate\",\n        children: [error ? \"Error loading \" : loading ? \"Loading \" : \"Add \", type, multiple && \"s\", loading && \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"self-stretch px-3 text-3xl bg-gray-800 bg-opacity-25 hover:bg-opacity-50 focus:outline-none focus-visible:ring ring-blue-500 ring-opacity-50 rounded-r\",\n        type: \"button\",\n        onClick: () => fileInput.current.click(),\n        children: [\"+\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute w-full h-full inset-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, files.length + 1, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\nexport default FormFiles;","map":{"version":3,"sources":["R:/VIT Research/Research Papers for topics/Stegnography for medical imaging/portalwebsite/gitstego/components/FormFiles.js"],"names":["useRef","useState","pretty","FormFiles","type","multiple","accept","files","setFiles","error","setError","loading","setLoading","fileInput","readFile","file","Promise","resolve","reject","reader","FileReader","onload","contents","result","name","date","Date","lastModified","size","onerror","readAsArrayBuffer","loadFiles","event","newFiles","all","target","map","reduce","uniqueFiles","exists","find","existing","index","filter","_","i","length","current","click"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport pretty from \"pretty-bytes\";\r\n\r\nconst FormFiles = ({ type = \"file\", multiple, accept, files, setFiles }) => {\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const fileInput = useRef(null);\r\n\r\n    const readFile = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                resolve({\r\n                    contents: reader.result,\r\n                    name: file.name,\r\n                    date: new Date(file.lastModified),\r\n                    size: file.size,\r\n                    type: file.type,\r\n                });\r\n            };\r\n            reader.onerror = reject;\r\n            reader.readAsArrayBuffer(file);\r\n        });\r\n    };\r\n\r\n    const loadFiles = async (event) => {\r\n        setLoading(true);\r\n        try {\r\n            const newFiles = await Promise.all(\r\n                [...event.target.files].map(readFile)\r\n            );\r\n            setError(false);\r\n            setFiles([...files, ...newFiles].reduce(uniqueFiles, []));\r\n        } catch {\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const uniqueFiles = (uniqueFiles, file) => {\r\n        const exists = uniqueFiles.find(\r\n            (existing) =>\r\n                existing.name === file.name &&\r\n                existing.lastModified === file.lastModified &&\r\n                existing.size === file.size &&\r\n                existing.type === file.type\r\n        );\r\n\r\n        return exists ? uniqueFiles : [...uniqueFiles, file];\r\n    };\r\n\r\n    return (\r\n        <ul className=\"grid grid-cols-1 md:grid-cols-2 gap-8 bg-gray-900 bg-opacity-25 shadow-inner p-8 -mx-8 sm:-mx-4 sm:rounded-lg\">\r\n            {files.map((file, index) => (\r\n                <li\r\n                    key={index}\r\n                    className=\"relative flex flex-row items-center text-base md:text-lg bg-gray-700 shadow rounded\"\r\n                >\r\n                    <span className=\"flex-grow py-2 px-4 truncate\">\r\n                        {file.name}\r\n                    </span>\r\n                    <span className=\"flex-shrink whitespace-nowrap py-2 px-4 text-gray-500\">\r\n                        {pretty(file.size)}\r\n                    </span>\r\n                    <button\r\n                        className=\"self-stretch px-3 text-3xl bg-gray-800 bg-opacity-25 hover:bg-opacity-50 focus:outline-none focus-visible:ring ring-blue-500 ring-opacity-50 rounded-r\"\r\n                        type=\"button\"\r\n                        onClick={() =>\r\n                            setFiles(files.filter((_, i) => i !== index))\r\n                        }\r\n                    >\r\n                        &times;\r\n                    </button>\r\n                </li>\r\n            ))}\r\n            {(files.length === 0 || multiple) && (\r\n                <li\r\n                    key={files.length + 1}\r\n                    className=\"relative flex flex-row items-center text-base md:text-lg bg-gray-700 shadow rounded\"\r\n                >\r\n                    <input\r\n                        type=\"file\"\r\n                        accept={accept}\r\n                        onChange={loadFiles}\r\n                        multiple={multiple}\r\n                        hidden\r\n                        ref={fileInput}\r\n                    />\r\n                    <span className=\"flex-grow py-2 px-4 truncate\">\r\n                        {error\r\n                            ? \"Error loading \"\r\n                            : loading\r\n                            ? \"Loading \"\r\n                            : \"Add \"}\r\n                        {type}\r\n                        {multiple && \"s\"}\r\n                        {loading && \"...\"}\r\n                    </span>\r\n                    <button\r\n                        className=\"self-stretch px-3 text-3xl bg-gray-800 bg-opacity-25 hover:bg-opacity-50 focus:outline-none focus-visible:ring ring-blue-500 ring-opacity-50 rounded-r\"\r\n                        type=\"button\"\r\n                        onClick={() => fileInput.current.click()}\r\n                    >\r\n                        +\r\n                        <span className=\"absolute w-full h-full inset-0\"></span>\r\n                    </button>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default FormFiles;\r\n"]},"metadata":{},"sourceType":"module"}