{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"R:\\\\VIT Research\\\\Research Papers for topics\\\\Stegnography for medical imaging\\\\portalwebsite\\\\gitstego\\\\components\\\\StepsFind.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport FormFiles from \"./FormFiles\";\nimport FormPassword from \"./FormPassword\";\nimport ProgressButton from \"./ProgressButton\";\nimport FindWorker from \"../workers/Find.worker\";\n\nvar StepsFind = function StepsFind() {\n  _s();\n\n  var _useState = useState([]),\n      image = _useState[0],\n      setImage = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      finding = _useState3[0],\n      setFinding = _useState3[1];\n\n  var _useState4 = useState(0),\n      progress = _useState4[0],\n      setProgress = _useState4[1];\n\n  var _useState5 = useState(null),\n      result = _useState5[0],\n      setResult = _useState5[1];\n\n  var findFiles = function findFiles() {\n    setFinding(true);\n    var worker = new FindWorker();\n\n    worker.onmessage = function (_ref) {\n      var _ref$data = _ref.data,\n          progress = _ref$data.progress,\n          result = _ref$data.result;\n      setProgress(progress);\n      setResult(result);\n    };\n\n    worker.postMessage({\n      image: image,\n      password: password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"form\",\n    className: \"grid gap-32\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-8\",\n        children: \"Add the image you want to retrieve files from within\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(FormFiles, {\n        type: \"image\",\n        accept: \"image/*\",\n        files: image,\n        setFiles: setImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-8\",\n        children: [\"Enter the password used to hide the files\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-400\",\n          children: \"(may be blank)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(FormPassword, {\n        value: password,\n        onChange: setPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProgressButton, {\n        onClick: findFiles,\n        progress: progress,\n        download: result && URL.createObjectURL(result),\n        children: result ? \"Download files\" : finding ? \"Finding files...\" : \"Find files inside image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(StepsFind, \"WxNszJDEE1U1S5ajk0NZdpmkn60=\");\n\n_c = StepsFind;\nexport default StepsFind;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepsFind\");","map":{"version":3,"sources":["R:/VIT Research/Research Papers for topics/Stegnography for medical imaging/portalwebsite/gitstego/components/StepsFind.js"],"names":["useState","FormFiles","FormPassword","ProgressButton","FindWorker","StepsFind","image","setImage","password","setPassword","finding","setFinding","progress","setProgress","result","setResult","findFiles","worker","onmessage","data","postMessage","URL","createObjectURL"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACML,QAAQ,CAAC,EAAD,CADd;AAAA,MACbM,KADa;AAAA,MACNC,QADM;;AAAA,mBAEYP,QAAQ,CAAC,EAAD,CAFpB;AAAA,MAEbQ,QAFa;AAAA,MAEHC,WAFG;;AAAA,mBAGUT,QAAQ,CAAC,KAAD,CAHlB;AAAA,MAGbU,OAHa;AAAA,MAGJC,UAHI;;AAAA,mBAIYX,QAAQ,CAAC,CAAD,CAJpB;AAAA,MAIbY,QAJa;AAAA,MAIHC,WAJG;;AAAA,mBAKQb,QAAQ,CAAC,IAAD,CALhB;AAAA,MAKbc,MALa;AAAA,MAKLC,SALK;;AAOpB,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAMM,MAAM,GAAG,IAAIb,UAAJ,EAAf;;AAEAa,IAAAA,MAAM,CAACC,SAAP,GAAmB,gBAAoC;AAAA,2BAAjCC,IAAiC;AAAA,UAAzBP,QAAyB,aAAzBA,QAAyB;AAAA,UAAfE,MAAe,aAAfA,MAAe;AACnDD,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,MAAAA,SAAS,CAACD,MAAD,CAAT;AACH,KAHD;;AAKAG,IAAAA,MAAM,CAACG,WAAP,CAAmB;AACfd,MAAAA,KAAK,EAALA,KADe;AAEfE,MAAAA,QAAQ,EAARA;AAFe,KAAnB;AAIH,GAbD;;AAeA,sBACI;AAAM,IAAA,EAAE,EAAC,MAAT;AAAgB,IAAA,SAAS,EAAC,aAA1B;AAAA,4BACI;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAII,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,MAAM,EAAC,SAFX;AAGI,QAAA,KAAK,EAAEF,KAHX;AAII,QAAA,QAAQ,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA,eAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAYI;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,gEAC8C,GAD9C,eAEI;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAKI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEC,QAArB;AAA+B,QAAA,QAAQ,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,eALJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAZJ,eAmBI;AAAA,6BACI,QAAC,cAAD;AACI,QAAA,OAAO,EAAEO,SADb;AAEI,QAAA,QAAQ,EAAEJ,QAFd;AAGI,QAAA,QAAQ,EAAEE,MAAM,IAAIO,GAAG,CAACC,eAAJ,CAAoBR,MAApB,CAHxB;AAAA,kBAKKA,MAAM,GACD,gBADC,GAEDJ,OAAO,GACP,kBADO,GAEP;AATV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAmCH,CAzDD;;GAAML,S;;KAAAA,S;AA2DN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\r\nimport FormFiles from \"./FormFiles\";\r\nimport FormPassword from \"./FormPassword\";\r\nimport ProgressButton from \"./ProgressButton\";\r\nimport FindWorker from \"../workers/Find.worker\";\r\n\r\nconst StepsFind = () => {\r\n    const [image, setImage] = useState([]);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [finding, setFinding] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [result, setResult] = useState(null);\r\n\r\n    const findFiles = () => {\r\n        setFinding(true);\r\n        const worker = new FindWorker();\r\n\r\n        worker.onmessage = ({ data: { progress, result } }) => {\r\n            setProgress(progress);\r\n            setResult(result);\r\n        };\r\n\r\n        worker.postMessage({\r\n            image,\r\n            password,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form id=\"form\" className=\"grid gap-32\">\r\n            <div>\r\n                <p className=\"mb-8\">\r\n                    Add the image you want to retrieve files from within\r\n                </p>\r\n                <FormFiles\r\n                    type=\"image\"\r\n                    accept=\"image/*\"\r\n                    files={image}\r\n                    setFiles={setImage}\r\n                />\r\n            </div>\r\n            <div>\r\n                <p className=\"mb-8\">\r\n                    Enter the password used to hide the files{\" \"}\r\n                    <span className=\"text-gray-400\">(may be blank)</span>\r\n                </p>\r\n                <FormPassword value={password} onChange={setPassword} />\r\n            </div>\r\n            <div>\r\n                <ProgressButton\r\n                    onClick={findFiles}\r\n                    progress={progress}\r\n                    download={result && URL.createObjectURL(result)}\r\n                >\r\n                    {result\r\n                        ? \"Download files\"\r\n                        : finding\r\n                        ? \"Finding files...\"\r\n                        : \"Find files inside image\"}\r\n                </ProgressButton>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default StepsFind;\r\n"]},"metadata":{},"sourceType":"module"}